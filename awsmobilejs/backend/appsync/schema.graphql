type Comment
{
eventId: ID!
commentId: String!
content: String!
createdAt: String!
}

type CommentConnection
{
items: [Comment]
nextToken: String
}

input CreateRequestInput
{
id: ID
firstName: String
middleName: String
lastName: String
suffix: String
votingState: String
country: String
status: String}

input DeleteRequestInput
{
id: ID!}

type Event
{
id: ID!
name: String
where: String
when: String
description: String
comments(limit: Int,nextToken: String ): CommentConnection
}

type EventConnection
{
items: [Event]
nextToken: String
}

type Mutation
{
createEvent(name: String!,when: String!,where: String!,description: String! ): Event
deleteEvent(id: ID! ): Event
commentOnEvent(eventId: ID!,content: String!,createdAt: String! ): Comment
createRequest(input: CreateRequestInput! ): Request
updateRequest(input: UpdateRequestInput! ): Request
deleteRequest(input: DeleteRequestInput! ): Request
}

type Query
{
getEvent(id: ID! ): Event
listEvents(limit: Int,nextToken: String ): EventConnection
getRequest(id: ID! ): Request
listRequests(first: Int,after: String ): RequestConnection
queryRequestsByCreatedByStatusIndex(createdBy: ID!,first: Int,after: String ): RequestConnection
queryRequestsByCountryStatusIndex(country: String!,first: Int,after: String ): RequestConnection
queryRequestsByVotingStateStatusIndex(votingState: String!,first: Int,after: String ): RequestConnection
}

type Request
{
id: ID!
createdBy: String!
firstName: String
middleName: String
lastName: String
suffix: String
votingState: String
country: String
status: String
}

type RequestConnection
{
items: [Request]
nextToken: String
}

type Subscription
{
subscribeToEventComments(eventId: String! ): Comment
@aws_subscribe(mutations: ["commentOnEvent"])
onCreateRequest(id: ID,createdBy: ID,firstName: String,middleName: String,lastName: String ): Request
@aws_subscribe(mutations: ["createRequest"])
onUpdateRequest(id: ID,createdBy: ID,firstName: String,middleName: String,lastName: String ): Request
@aws_subscribe(mutations: ["updateRequest"])
onDeleteRequest(id: ID,createdBy: ID,firstName: String,middleName: String,lastName: String ): Request
@aws_subscribe(mutations: ["deleteRequest"])
}

input UpdateRequestInput
{
id: ID!
createdBy: ID
firstName: String
middleName: String
lastName: String
suffix: String
votingState: String
country: String
status: String}

schema 
{
query: Query
mutation: Mutation
subscription: Subscription
}
